{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "An example of a zoomable circle packing layout for hierarchical data.",
  "width": {"signal":"canvaswidth"},
  "height": 600,
  "padding": 5,

  "signals": [

    {"name": "canvaswidth",
     "update":"(25/2)*300"
    },

    {
      "name": "timer",
      "description": "The timer to be used for transitions such as zoom, fade, etc.",
      "on": [{"events": "timer", "update": "now()"}]
    },

    {
      "name": "interpolateTime",
      "description": "the start and end times in miliseconds for animation interpolations",
      "on": [
        {
          "events": 
                  {
                    "type": "click",
                    "markname": "circles"
                  },
                  "update": "{'start': timer, 'end': timer+750}"
          
        }
      ]
    },
    {
      "name": "t",
      "description": "The normalized time for easing",
      "update": "interpolateTime ? clamp((timer-interpolateTime.start)/(interpolateTime.end-interpolateTime.start), 0, 1): null"
    },
        {
      "name": "testval",
      "description": "The normalized time for easing",
      "update": "interpolateTime ?(timer-interpolateTime.start):null"
    },
    {
      "name": "testval2",
      "description": "The normalized time for easing",
      "update": "interpolateTime ?(interpolateTime.end-interpolateTime.start):null"
    },
    {
      "name": "t2",
      "description": "The normalized time for easing",
      "update": "interpolateTime ?(timer-interpolateTime.start)/(interpolateTime.end-interpolateTime.start):null"
    },

    {
      "name": "tEase",
      "description": "The easing calculation. Currently set as easeInOutCubic",
      "update": "t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1"
    },
        {
      "name": "tEase2",
      "description": "The easing calculation. Currently set as easeInOutCubic",
      "update": 
      "t < 0.5 ? 16 * t * t * t * t * t : 1 - pow(-2 * t + 2, 5) / 2"
    },
   
        {
      "name": "tEase3",
      "description": "The easing calculation. Currently set as easeInOutCubic",
      "update": 
      "t === 0 ? 0 : pow(2, 10 * t - 10)"
    },
            {
      "name": "tEase4",
      "description": "easing. Currently set as easeInOutCubic",
      "update": 
      "t === 0 ? 0 : t === 1? 1 : pow(2, -10 * t) * sin((t * 10 - 0.75) * (2 * PI) / 3) + 1"
    },
    {
      "name": "lerpval",
      "description": "lerpvalue",
      "update": "lerp([100, 20],tEase2)"
    },
        {
      "name": "lerparray",
      "update":"[20,100]",
      "description": "arryval",
      "on": [
        {
          "events": {"type": "click", "markname": "circles"},
          "update": "reverse(lerparray)"
        }
      ]
    },
    
    {
      "name": "intermitval",
      "description": "lerpvalue",
      "update": "{1:lerp([1, 50],tEase),2:(2 * lerpval),3:2*(2 * lerpval),4:pow(2*(2 * lerp(lerparray,tEase2)),2),5:now()}"
    },
    {
      "name": "val",
      "description": "lerpvalue",
      "update": "tEase4 == 0 ? 5000:pow(2*(2 * lerp(lerparray,tEase2)),2)"
    },
    {
      "name": "opac",
      "update":"[1,0]",
      "on":
      [
        {
          "events": {"type": "click", "markname": "circles"},
          "update": "reverse(opac)"
        }

      ]
    }

      ],
    

"marks": 
  [
    {
      "name": "circles",
      "description": "a zoomable circle",
      "type": "symbol",
      "encode": 
      {
        "enter":
        {
          "shape": {"value": "circle"},
          "angle":{"value":0},
          "size" :{"value":2000},
          "fill" :{"value":"#00008B"},
          "opacity":{"value":"1"},          //general opacity for all properties
          "fillOpacity":{"value":"0.7"},    // opacity for fill
          "stroke" :{"value":"#000000"},    // border for circle
          "strokeWidth":{"value":"3"},      // width of the border
          "strokeOpacity":{"value":"1"},
          "cursor" :{"value":"zoom-in"},
          "x":{"value":300},
          "y":{"value":300},

        },
        "update" : 
        {
          "size" : {"signal":"val"},
          "fillOpacity": {"signal":"lerp(opac,tEase2)"},
          "stroke" :{"value":"#999342"}
        }

     }      
    }
  ]
}
